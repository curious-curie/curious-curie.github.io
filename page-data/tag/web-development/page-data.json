{"componentChunkName":"component---src-templates-tag-template-js","path":"/tag/web-development","result":{"data":{"site":{"siteMetadata":{"title":"Curious Notes By Curie","subtitle":"Daily Learning Journals by Curious-Curie"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/before-you-memo","categorySlug":"/category/react/"},"frontmatter":{"title":"[React] Before you memo()","date":"2021-04-14T22:40:32.169Z","category":"React","description":"https://overreacted.io/before-you-memo/ 를 읽고 정리"}}},{"node":{"fields":{"slug":"/posts/loaded-meta-data","categorySlug":"/category/web/"},"frontmatter":{"title":"[Web] loadedmetadata / loadeddata / canplay","date":"2021-03-19T22:40:32.169Z","category":"web","description":"뷰어 구현에 필수적인 비디오 이벤트들.. 이 기회에 헷갈리는 부분을 정리해보자"}}},{"node":{"fields":{"slug":"/posts/no-await-in-loop","categorySlug":"/category/javascript/"},"frontmatter":{"title":"[JS] no-await-in-loop?","date":"2021-03-16T22:40:32.169Z","category":"Javascript","description":"eslint 룰 중에 no-await-in-loop이 있는 이유?"}}},{"node":{"fields":{"slug":"/posts/fe-optimization","categorySlug":"/category/frontend/"},"frontmatter":{"title":"[FE] 프론트엔드 성능 최적화","date":"2021-01-27T22:40:32.169Z","category":"Frontend","description":"FE 성능 측정과 최적화 방법들"}}},{"node":{"fields":{"slug":"/posts/react-ref","categorySlug":"/category/react/"},"frontmatter":{"title":"[React] Ref","date":"2021-01-22T22:40:32.169Z","category":"React","description":"useRef는 내용이 변경될 때 그것을 알려주지는 않는다는 것을 유념하세요. .current 프로퍼티를 변형하는 것이 리렌더링을 발생시키지는 않습니다. React가 DOM 노드에 ref를 attach하거나 detach할 때 어떤 코드를 실행하고 싶다면 대신 콜백 ref를 사용하세요."}}},{"node":{"fields":{"slug":"/posts/react-code-splitting","categorySlug":"/category/react/"},"frontmatter":{"title":"[React] Code Splitting","date":"2021-01-21T22:40:32.169Z","category":"React","description":"런타임에 번들을 동적으로 생성하고 불러오는 것"}}},{"node":{"fields":{"slug":"/posts/typescript-conditional-types","categorySlug":"/category/typescript/"},"frontmatter":{"title":"[Typescript] conditional types 활용해서 안정성 확보하기","date":"2021-01-20T22:40:32.169Z","category":"Typescript","description":"[8월 우아한테크세미나] 우아한 타입스크립트..."}}},{"node":{"fields":{"slug":"/posts/typescript-object","categorySlug":"/category/typescript/"},"frontmatter":{"title":"[Typescript] Object vs. object vs. {}","date":"2021-01-19T22:40:32.169Z","category":"Typescript","description":"strictNullChecks 옵션이 안 켜져 있으면 null 과 undefined 는 세 가지 타입에 다 할당 가능하다..."}}}]}},"pageContext":{"tag":"Web Development","currentPage":0,"postsLimit":8,"postsOffset":0,"prevPagePath":"/tag/web-development","nextPagePath":"/tag/web-development/page/1","hasPrevPage":false,"hasNextPage":true}},"staticQueryHashes":["251939775","2703480616","401334301"]}