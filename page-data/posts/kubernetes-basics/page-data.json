{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/kubernetes-basics","result":{"data":{"markdownRemark":{"id":"30fb265e-04c0-57af-b919-e372a7dd0356","html":"<h2 id=\"ncc\" style=\"position:relative;\"><a href=\"#ncc\" aria-label=\"ncc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NCC</h2>\n<p>Kubernetes based container cluster</p>\n<h2 id=\"컨테이너\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88\" aria-label=\"컨테이너 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨테이너</h2>\n<p>소프트웨어를 스탠다드한 유닛으로 패키징하는 기술 </p>\n<ul>\n<li>컨테이너는 어플리케이션의 런타임 인스턴스</li>\n<li>컨테이너 단위로 OS, 라이브러리, 어플리케이션을 패키징 할 수 있다.</li>\n<li>\n<p>배포 단위로 컨테이너 이미지 만들어 사용 가능</p>\n<ul>\n<li>Immutable 한 배포 ⇒ 쉽게 배포, 롤백</li>\n<li>CI/CD에 적합</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"컨테이너-기술-요소\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EA%B8%B0%EC%88%A0-%EC%9A%94%EC%86%8C\" aria-label=\"컨테이너 기술 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨테이너 기술 요소</h3>\n<h4 id=\"linux-namespace\" style=\"position:relative;\"><a href=\"#linux-namespace\" aria-label=\"linux namespace permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Linux Namespace</h4>\n<p>프로세스 별로 격리된 공간 제공 (프로세스의 가상화)</p>\n<p>프로세스가 볼 수 있는 리소스의 view를 재정의 (MNT, hostname, PID, IPC, Network, Username…)</p>\n<p>커널이 알고있는 실제 데이터와 다르게 정의 ⇒ 프로세스마다 다르게 보게할 수 있다 </p>\n<h4 id=\"cgroup\" style=\"position:relative;\"><a href=\"#cgroup\" aria-label=\"cgroup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>cgroup</h4>\n<p>리소스의 사용량을 한정하는 기술</p>\n<ul>\n<li>\n<p><strong>리소스 할당 방식</strong></p>\n<ul>\n<li>static binding: 특정 리소스만 사용하도록 그룹별 바인딩</li>\n<li>Priority-based: 어떤 cgroup에게 특정 리소스 사용의 우선순위 부여</li>\n<li>limit: 얼마 이상 사용할 수 없게 제한</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"unionfs\" style=\"position:relative;\"><a href=\"#unionfs\" aria-label=\"unionfs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>unionfs</h4>\n<p>파일 시스템의 immutability를 보장 ⇒ 컨테이너가 사용할 파일 시스템 격리</p>\n<h3 id=\"docker\" style=\"position:relative;\"><a href=\"#docker\" aria-label=\"docker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker</h3>\n<p>컨테이너를 이미지 파일로 빌드하고 배포하여 어디서나 실행할 수 있게 해주는 오픈소스 </p>\n<p>마치 깃처럼… 빌드 푸시하고 실행하고 </p>\n<p>자동으로 immutable하게 실행할 수 있도록 해줌 </p>\n<p>서버 - 클라이언트로 나뉨</p>\n<ul>\n<li>클라이언트 = REST 요청 ⇒ 서버 (build)</li>\n<li>\n<p>Image: 어떤 어플리케이션을 실행하기 위한 환경</p>\n<ul>\n<li>도커에서는 어플리케이션을 실행하기 위한 파일들을 모아놓고 어플리케이션과 함께 이미지로 만들 수 있음 ⇒ 이 이미지를 기반으로 어플리케이션을 바로 배포 가능</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"kubernetes\" style=\"position:relative;\"><a href=\"#kubernetes\" aria-label=\"kubernetes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kubernetes</h2>\n<p>: Container Orchestration System </p>\n<p>구글의 컨테이너 플랫폼 / 마이크로서비스 플랫폼 / 이식성있는 클라우드 플랫폼</p>\n<p>다양한 어플리케이션 타입(Stateless, Stateful, 데이터 처리…)를 컨테이너로 구동할 수 있게 해줌 </p>\n<p><em>Docker Orchestration</em>: 클러스터 상에서 콘테이너를 설치, 관리해줌 </p>\n<ul>\n<li>Scheduling : 여러 호스트에 컨테이너 분배, 장애 시 재분배…</li>\n<li>Networking : 분산된 컨테이너 간의 네트워크</li>\n<li>Logging: 컨테이너의 로그 조회</li>\n<li>Monitoring</li>\n<li>Storage</li>\n</ul>\n<p>선언적으로 동작하는 시스템 ( REST API와는 달리 )</p>\n<p>Kubernetes Object (pod)를 Kubernetes 시스템에 반영하는 방식으로 동작 (object의 생성, 실행, 삭제…)</p>\n<p>⇒ 이식성있는 동작 </p>\n<h2 id=\"kubernetes-objects\" style=\"position:relative;\"><a href=\"#kubernetes-objects\" aria-label=\"kubernetes objects permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kubernetes Objects</h2>\n<h3 id=\"pod\" style=\"position:relative;\"><a href=\"#pod\" aria-label=\"pod permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pod</h3>\n<p>Kubernetes에서는 컨테이너를 Pod 단위로 묶어서 배포 </p>\n<p>한 Pod내의 컨테이너는 네트워크와 로컬 디스크 볼륨을 공유함 </p>\n<p>Pod 단위로 IP 할당 (ncc에서는 실제 외부에서 접근 가능한 ip 할당됨)</p>\n<p>Pod 안에 컨테이너는 1개 ~ n개, 로컬디스크도 같이 넣을 수도 있고</p>\n<h3 id=\"deployment\" style=\"position:relative;\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h3>\n<p>여러개의 ReplicaSet을 관리, 배포 담당</p>\n<p>Deployment Object 생성 ⇒ 얘네가 ReplicaSet 생성, 관리 </p>\n<h3 id=\"service\" style=\"position:relative;\"><a href=\"#service\" aria-label=\"service permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Service</h3>\n<p>여러 Pod들의 접근 Endpoint → IP 제공  (사용자가 접근할 수 있도록)</p>\n<p>서비스 생성 시 IP 할당 받음 </p>\n<p>Pod들의 부하 / 분산 </p>\n<ul>\n<li>\n<p>ClusterIP (default)</p>\n<ul>\n<li>e.g. msa에서 컴포넌트끼리 통신할 때 외부 노출할 필요 없이 사용</li>\n</ul>\n</li>\n<li>LoadBalancer ⇒ 외부에서 접근 가능한 IP를 하나 더 할당받음</li>\n</ul>\n<h3 id=\"statefulset\" style=\"position:relative;\"><a href=\"#statefulset\" aria-label=\"statefulset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Statefulset</h3>\n<p>stateful한 어플리케이션을 관리하기 위한 오브젝트</p>\n<p>⇒ redis, mysql, kafka…  </p>\n<p>(deployment는 stateless한 object)</p>\n<h2 id=\"서비스-배포-전략\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%B0%B0%ED%8F%AC-%EC%A0%84%EB%9E%B5\" aria-label=\"서비스 배포 전략 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서비스 배포 전략</h2>\n<h3 id=\"rolling-update\" style=\"position:relative;\"><a href=\"#rolling-update\" aria-label=\"rolling update permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rolling Update</h3>\n<p>Kubernetes 상에서 이미 동작하고 있는 서비스를 새로운 버전으로 배포하고자 할 때 ⇒ 기존 이미지 pod들을 새로운 pod으로 변경해야 함 </p>\n<p>사용자가 Deployment에 설정된 image 변경 (apply)</p>\n<p>⇒ 내부적으로 <code class=\"language-text\">Deployment controller</code> 가 자동으로 <code class=\"language-text\">replicationset</code>을 하나 더 추가하여 pod을 교체해줌</p>\n<h3 id=\"progressive-deployment\" style=\"position:relative;\"><a href=\"#progressive-deployment\" aria-label=\"progressive deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Progressive Deployment</h3>\n<p>rolling update와 다른 방식, 새로운 버전의 서비스가 잘 동작하는지 점진적으로 확인하면서 반영하고자 하는 경우</p>\n<p>기존 버전의 deployment와 별개로 새로운 버전의 image 갖는 deployment 추가</p>\n<p>새로운 deployment의 pod label을 지정된 값으로 설정해서 기존 서비스에 포함되어 운영되도록 함</p>\n<p>⇒ 새 버전 pod들의 개수를 점진적으로 늘려가면서 기존 pod을 줄이는 방식 </p>\n<h3 id=\"bluegreen-deployment\" style=\"position:relative;\"><a href=\"#bluegreen-deployment\" aria-label=\"bluegreen deployment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Blue/Green Deployment</h3>\n<p>kubernetes의 서비스 설정 변경하면서 두 개의 Deployment 간 부하를 조절하면서 새 버전으로 교체하는 방식</p>\n<p>(Progressive 배포는 운영자가 두 deployment의 설정 변경하면서 pod 개수 조절하는 방식)</p>\n<p>부하 분산 비율을 설정해서 일정 기간 동안 두 deployment를 동시에 서비스 되도록 ,,, </p>\n<p>selector의 version을 blue/green으로 지정, 부하 분배하는 방식</p>","fields":{"slug":"/posts/kubernetes-basics","tagSlugs":["/tag/kubernetes/","/tag/backend/"]},"frontmatter":{"date":"2021-01-26T22:40:32.169Z","description":"Tech Share - 쿠버네티스의 이해 정리","tags":["Kubernetes","Backend"],"title":"[Kubernetes] 쿠버네티스 기초","socialImage":""}}},"pageContext":{"slug":"/posts/kubernetes-basics"}},"staticQueryHashes":["251939775","2703480616","401334301"]}