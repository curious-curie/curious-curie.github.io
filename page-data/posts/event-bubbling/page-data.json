{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/event-bubbling","result":{"data":{"markdownRemark":{"id":"249e16d6-25cf-5008-8b51-d49c0bfc9099","html":"<p>프로필 사진 업로드 기능을 구현하던 중 이벤트 버블링을 직접 만나게 되었다!</p>\n<p>반가운 마음에 글로 정리해본다. </p>\n<p>사진 업로드 시 외부 library를 썼기 때문에 커스터마이징 할 수 있는 옵션이 제한되어있었다.</p>\n<p>안드로이드에서 카메라, 갤러리 통해 사진을 받으려면 Input 의 accept attribute에 ‘image/*‘를 추가해야 했는데, 파일 업로드 박스가 사진을 업로드하면 사라졌다가 지우면 다시 나타나는 구조라 (v-if 써서) mounted()단계에서 setAttribute 한 것이 날라가버렸다. </p>\n<p>그래서 파일 업로드 박스에 click eventlistener를 달아서 클릭 시마다 attribute를 추가하도록 했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">mounted</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileClickArea <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.vicp-drop-area'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileInput <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input[type=\"file\"]'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileClickArea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>setInputFileType<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>setInputFileType 함수에 콘솔 로그를 넣어보니, 한 번 클릭할 때 마다 함수가 두번 fire 되는 걸 알 수 있었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>vicp-step1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>vicp-hint<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>파일을 업로드하세요.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>간략화하면 이런 구조인데, 발생한 event를 보면:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">isTrusted<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\npath<span class=\"token operator\">:</span> (<span class=\"token number\">13</span>) <span class=\"token punctuation\">[</span>input<span class=\"token punctuation\">,</span> div.vicp-drop-area<span class=\"token punctuation\">,</span> div.vicp-step1<span class=\"token punctuation\">,</span> div.vicp-wrap<span class=\"token punctuation\">,</span> div.vue-image-crop-up...\nsrcElement<span class=\"token operator\">:</span> input\ntarget<span class=\"token operator\">:</span> input\ntimeStamp<span class=\"token operator\">:</span> <span class=\"token number\">91021.18499999051</span>\ntoElement<span class=\"token operator\">:</span> input\ntype<span class=\"token operator\">:</span> <span class=\"token string\">\"click\"</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">isTrusted<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\npath<span class=\"token operator\">:</span> (<span class=\"token number\">12</span>) <span class=\"token punctuation\">[</span>div.vicp-drop-area<span class=\"token punctuation\">,</span> div.vicp-step1<span class=\"token punctuation\">,</span>...\nsrcElement<span class=\"token operator\">:</span> div.vicp-drop-area\ntarget<span class=\"token operator\">:</span> div.vicp-drop-area\ntimeStamp<span class=\"token operator\">:</span> <span class=\"token number\">282203.10499999323</span>\ntoElement<span class=\"token operator\">:</span> div.vicp-drop-area\ntype<span class=\"token operator\">:</span> <span class=\"token string\">\"click\"</span></code></pre></div>\n<p>이렇게 자식-부모 element에서 모두 이벤트가 발생! 함을 알 수 있었다 </p>\n<h3 id=\"event-bubbling\" style=\"position:relative;\"><a href=\"#event-bubbling\" aria-label=\"event bubbling permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Event Bubbling</h3>\n<p>이벤트가 더 상위 화면 요소들로 전달되어가는 것 </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>one<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>two<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>three<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> divs <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndivs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">div</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tdiv<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> logEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">logEvent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>three를 클릭할 경우, three에서 발생한 이벤트가 two → one 을 거쳐 최상위 요소인 body까지 전달되는 것 </p>\n<p>굉장히 많이 보셨을 예제 ^ㅡ^ </p>\n<h3 id=\"해결-방법\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결 방법?</h3>\n<ol>\n<li>StopPropagation()</li>\n</ol>\n<p>보통의 해결책은 stopPropagation() 을 사용하여 해결하라고 한다. </p>\n<p>event 발생 시 호출하는 function 첫 줄에 e.stopPropagation()을 써서! </p>\n<p>그런데 내 코드에서 작동하지 않았다. 그 이유는 아직도 못 찾았다. </p>\n<ul>\n<li>참고: preventDefault는 브라우저의 default 액션만 막는다. bubbling으로 인한 액션은 막지 못할 가능성이 크다.</li>\n<li>나의 경우: isTrusted 사용하여 해결 </li>\n</ul>\n<p>isTrusted is true for events that come from real user actions and false for script-generated events.</p>\n<p>isTrusted를 사용해서 이 이벤트가 js로 인해 발생한건지, 실제 사용자의 행위로 인해 발생한 건지 체크해서 액션을 달리했다. </p>\n<p>즉, event.isTrusted가 false면 setAttribute를 실행하지 않았다 </p>\n<p>근데 이 방법이 정석적이거나 흔한 방법은 아닌 것 같다.</p>\n<p>isTrusted를 체크한 후 e.stopPropagation()을 사용하거나 하는 식으로 이벤트 버블링을 방지하지, 필자처럼 isTrusted가 아니면 return하는 식으로 직접 제어하는 방식은 잘 찾아보기 힘들었다. </p>\n<p>아무래도 이 문제 상황이 표준적인 이벤트 버블링이랑 같지는 않은 것 같다는 생각이 든다. @click 바인딩 문제거나 (결국 이벤트버블링이랑 같은 맥락이긴 함) </p>\n<h3 id=\"event-capture\" style=\"position:relative;\"><a href=\"#event-capture\" aria-label=\"event capture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Event Capture</h3>\n<p>버블링과 반대 방향으로 진행되는 이벤트 전파</p>\n<p>상위 요소에서 이벤트 발생지점을 찾아내려가는 것입니다. (부모노드에서 자식노드로!) </p>\n<p>capturing 옵션을 통해 구현할 수 있고, 여러 요소가 한 번의 클릭에 모두 반응하도록 하고 싶을 때 사용하면 된다.</p>\n<p>useCapture의 default 값이 false이기 때문에 보통 bubbling 방식으로 이벤트가 전파되는 것, true로 설정하면 캡처링을 통해 이벤트가 전파된다. </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token punctuation\">[</span>element<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">,</span> useCapture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Curie Yoo</p>","fields":{"slug":"/posts/event-bubbling","tagSlugs":["/tag/javascript/","/tag/frontend/","/tag/web-development/"]},"frontmatter":{"date":"2020-05-21T22:40:32.169Z","description":"프로필 사진 업로드 기능을 구현하던 중 이벤트 버블링을 직접 만나게 되었다! 반가운 마음에 글로 정리해본다.  ...","tags":["Javascript","Frontend","Web Development"],"title":"[Javascript] Event Bubbling과의 만남","socialImage":""}}},"pageContext":{"slug":"/posts/event-bubbling"}},"staticQueryHashes":["251939775","2703480616","401334301"]}