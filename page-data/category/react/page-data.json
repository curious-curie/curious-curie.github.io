{"componentChunkName":"component---src-templates-category-template-js","path":"/category/react","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"categorySlug":"/category/react/","slug":"/posts/before-you-memo"},"frontmatter":{"date":"2021-04-14T22:40:32.169Z","description":"https://overreacted.io/before-you-memo/ 를 읽고 정리","category":"React","title":"[React] Before you memo()"}}},{"node":{"fields":{"categorySlug":"/category/react/","slug":"/posts/react-ref"},"frontmatter":{"date":"2021-01-22T22:40:32.169Z","description":"useRef는 내용이 변경될 때 그것을 알려주지는 않는다는 것을 유념하세요. .current 프로퍼티를 변형하는 것이 리렌더링을 발생시키지는 않습니다. React가 DOM 노드에 ref를 attach하거나 detach할 때 어떤 코드를 실행하고 싶다면 대신 콜백 ref를 사용하세요.","category":"React","title":"[React] Ref"}}},{"node":{"fields":{"categorySlug":"/category/react/","slug":"/posts/react-code-splitting"},"frontmatter":{"date":"2021-01-21T22:40:32.169Z","description":"런타임에 번들을 동적으로 생성하고 불러오는 것","category":"React","title":"[React] Code Splitting"}}},{"node":{"fields":{"categorySlug":"/category/react/","slug":"/posts/mobx-review"},"frontmatter":{"date":"2020-08-20T22:40:32.169Z","description":"네이버 인턴십 6주차 과제를 진행하고 나서 쓴 Mobx 리뷰","category":"React","title":"[React] Mobx 리뷰 및 사용기, Redux와 비교"}}}]}},"pageContext":{"category":"React","currentPage":0,"postsLimit":8,"postsOffset":0,"prevPagePath":"/category/react","nextPagePath":"/category/react/page/1","hasPrevPage":false,"hasNextPage":false}},"staticQueryHashes":["251939775","2703480616","401334301"]}